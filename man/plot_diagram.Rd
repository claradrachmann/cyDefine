% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/06_visualize.R
\name{plot_diagram}
\alias{plot_diagram}
\title{Plot a Diagram from Merged Cell Types}
\usage{
plot_diagram(
  input,
  colors = NULL,
  fontcolor_nodes = NULL,
  default_fontcolor = "black"
)
}
\arguments{
\item{input}{A \code{list} or \code{data.frame}. If a \code{data.frame}, it should have been processed using
\code{adapt_reference()} and must contain columns \code{celltype} and \code{celltype_original}.
If a \code{list}, it should be structured such that each key represents a merged cell type and
each value is a vector of original cell types.}

\item{colors}{A named vector where the names correspond to cell types (both original and merged),
and the values are color codes to be used for filling the nodes in the diagram.}

\item{fontcolor_nodes}{A named vector (optional) that specifies font colors for specific nodes.
If a node's font color is not provided in this vector, \code{default_fontcolor} will be used.}

\item{default_fontcolor}{A \code{character} string specifying the default font color to be used
for nodes that are not included in \code{fontcolor_nodes}. Default is \code{"black"}.}
}
\value{
A rendered diagram produced by \code{DiagrammeR::grViz()} that visually represents the merging
of cell types. The diagram includes nodes for both original and merged cell types, with edges
showing the relationship between them.
}
\description{
This function generates a diagram that visualizes the merging of cell types based on
a provided list or data frame. The diagram illustrates how original cell types (nodes) merge into
final cell types.
}
\details{
The function first checks if the input is a data frame or a list. If it is a data frame,
it calls \code{get_merge_list()} to convert it into the required list structure. The function then
generates a DOT language script to define the diagram, including node styling, edge creation,
and graph layout. Finally, it uses \code{DiagrammeR::grViz()} to render the flowchart.
}
\examples{
\dontrun{
# Assuming `adapted_reference` is a preprocessed tibble from `adapt_reference()`
fontcolor_nodes <- c("NK" = "white", "NK Proliferating / NK" = "white")

plot_diagram(adapted_reference, fontcolor_nodes)
}

}
\seealso{
\code{adapt_reference()}, \code{get_merge_list()}
}
